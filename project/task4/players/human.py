from .player import Player
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from core.card import Card


class HumanPlayer(Player):
    """
    Human player that makes decisions through user input.
    """

    def __init__(self, name: str, chips: int = 1000) -> None:
        """
        Initializes a human player.

        Parameters:
            name : str (Player's name)
            chips : int (Starting chip amount, default 1000)
        """
        super().__init__(name, chips)

    def make_decision(self, dealer_up_card: "Card") -> str:
        """
        Gets decision from user input with validation.

        Parameters:
            dealer_up_card : Card (Dealer's visible card)

        Returns:
            str: User's decision as "hit", "stand", or "double"
        """
        print(f"\n--- –•–æ–¥ {self.name} ---")
        print(f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã: {self.hand} (–°—É–º–º–∞: {self.hand.value})")
        print(f"–ö–∞—Ä—Ç–∞ –¥–∏–ª–µ—Ä–∞: {dealer_up_card}")
        print(f"–í–∞—à–∏ —Ñ–∏—à–∫–∏: {self.chips}, –°—Ç–∞–≤–∫–∞: {self.bet}")

        while True:
            choice = (
                input(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ - –í–∑—è—Ç—å –∫–∞—Ä—Ç—É (h), –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è (s), –£–¥–≤–æ–∏—Ç—å (d): "
                )
                .lower()
                .strip()
            )

            if choice in ["h", "hit", "–≤–∑—è—Ç—å", "—Ö"]:
                return "hit"
            elif choice in ["s", "stand", "—Å—Ç–æ–ø", "–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è", "—Å"]:
                print(f"‚úÖ {self.name} –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è")
                return "stand"
            elif choice in ["d", "double", "—É–¥–≤–æ–∏—Ç—å", "–¥"]:
                if self.chips >= self.bet:
                    self.chips -= self.bet
                    self.bet *= 2
                    print(
                        f"üí∞ {self.name} —É–¥–≤–∞–∏–≤–∞–µ—Ç —Å—Ç–∞–≤–∫—É –¥–æ {self.bet} –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ö–æ–¥"
                    )
                    return "double"
                else:
                    print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∏—à–µ–∫ –¥–ª—è —É–¥–≤–æ–µ–Ω–∏—è!")
            else:
                print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

    def make_bet(self) -> bool:
        """
        Gets bet amount from user input with validation.

        Returns:
            bool: True if bet was placed successfully
        """
        print(f"\n--- –°—Ç–∞–≤–∫–∞ {self.name} ---")
        print(f"–î–æ—Å—Ç—É–ø–Ω–æ —Ñ–∏—à–µ–∫: {self.chips}")

        while True:
            try:
                bet_input = input("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Å—Ç–∞–≤–∫–∏: ")
                bet_amount = int(bet_input)

                if bet_amount <= 0:
                    print("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
                elif bet_amount > self.chips:
                    print(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∏—à–µ–∫! –î–æ—Å—Ç—É–ø–Ω–æ: {self.chips}")
                    max_bet = (
                        input(f"–°–¥–µ–ª–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É ({self.chips})? (y/n): ")
                        .lower()
                        .strip()
                    )
                    if max_bet == "y":
                        bet_amount = self.chips
                        success = self.place_bet(bet_amount)
                        if success:
                            print(f"–°—Ç–∞–≤–∫–∞ {bet_amount} –ø—Ä–∏–Ω—è—Ç–∞!")
                            return True
                    else:
                        continue
                else:
                    success = self.place_bet(bet_amount)
                    if success:
                        print(f"–°—Ç–∞–≤–∫–∞ {bet_amount} –ø—Ä–∏–Ω—è—Ç–∞!")
                        return True
                    else:
                        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏!")

            except ValueError:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
